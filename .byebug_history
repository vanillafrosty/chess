exit
board[input].is_a?(Pawn)
input
board[input].is_a?(NullPiece)
board[input]
input
n
start_pos
input
c
n
cursor.cursor_pos
end_pos
start_pos
s
n
end_pos
s
c
cursor.cursor_pos
cursor_pos
input
c
input
c
n
start_pos
n
c
input
c
input
c
n
c
end_pos
start_pos
c
end_pos
start_pos
c
end_pos
start_pos
c
end_pos
start_pos
c
start_pos
valid_moves_arr
n
s
end_pos
start_pos
exit
exi
c
@cursor.cursor_pos
n
c
n
@start_pos
n
c
n
@start_pos
c
n
s
@start_pos
n
c
n
@start_pos
n
m
@start_pos
n
@starter_pos
exit
@start_pos
exit
board[newpos].color != color
!board[newpos].is_a?(NullPiece)
board.valid_pos?(move)
DIAGONALS.include?(move)
newpos
move
s
board[newpos].class
newpos
pos
move
output
c
move
output
exit
newpos
starting_pos
board.validate!(starting_pos,newpos)
newpos
n
move
output
c
n
newpos
output
c
move
output
n
newpos
s
output
s
move
move[i]
move[i[
starting_pos
el
s
move_dirs_arr
c
s
start_pos
s
pos
s
pos
s
board.validate!(starting_pos,newpos)
newpos
s
newpos
s
dir
s
starting_pos
s
c
starting_pos
c
exit
starting_pos
s
c
output
c
starting_pos
dir
s
starting_pos
s
n
s
starting_pos
board.validate!(starting_pos,newpos)
newpos
s
dir[i]
el
s
dir
dir[i]
p i
i
el
s
move_dirs_arr
dir
s
starting_pos
s
move_dirs_arr
